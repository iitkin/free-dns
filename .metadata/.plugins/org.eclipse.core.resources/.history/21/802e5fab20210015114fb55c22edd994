<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>com.mediaocean.prebuy</groupId>
		<artifactId>prebuy-server-parent</artifactId>
		<version>2015.6-SNAPSHOT</version>
	</parent>

	<artifactId>prebuy-server-services</artifactId>
	<packaging>war</packaging>
	<name>prebuy-server-services</name>

	<properties>
		<net.dds.ideskos.services.data.access>1.0.0-RC1</net.dds.ideskos.services.data.access>
		<integration.package>com.mediaocean.prebuy.integration</integration.package>
		<org.aspectj.version>1.7.2</org.aspectj.version>
	</properties>

	<dependencies>

		<!-- Start Internal Dependencies -->
		<dependency>
			<groupId>com.mediaocean.prebuy</groupId>
			<artifactId>prebuy-server-external</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>com.mediaocean.prebuy</groupId>
			<artifactId>prebuy-server-broker-dto</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>com.mediaocean.prebuy</groupId>
			<artifactId>prebuy-server-common</artifactId>
			<version>${project.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>xml-apis</artifactId>
					<groupId>xml-apis</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.mediaocean.prebuy</groupId>
			<artifactId>prebuy-service</artifactId>
			<version>${project.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>xml-apis</artifactId>
					<groupId>xml-apis</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<artifactId>prebuy-service-external-analytics</artifactId>
			<groupId>com.mediaocean.prebuy</groupId>
			<version>${project.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>javassist</artifactId>
					<groupId>javassist</groupId>
				</exclusion>
			</exclusions>
		</dependency>
				<!-- Idesk OS Internal dependencies -->
		<dependency>
			<groupId>net.dds.ideskos.services.broker</groupId>
			<artifactId>ideskos-service-broker-dtos</artifactId>
		</dependency>
		<dependency>
			<groupId>com.mediaocean.os.locale</groupId>
			<artifactId>os-localisation</artifactId>
		</dependency>
		 
		<dependency>
			<groupId>com.mediaocean.prisma</groupId>
			<artifactId>campaign-service-broker</artifactId>
		</dependency>
		
		<dependency>
			<groupId>com.mediaocean.prisma</groupId>
			<artifactId>security-admin-service-broker</artifactId>
		</dependency>

		<!-- End Internal Dependencies -->

		<dependency>
			<groupId>com.hazelcast</groupId>
			<artifactId>hazelcast</artifactId>
			<version>3.2</version>
		</dependency>
		
		<dependency>
  			<groupId>com.hazelcast</groupId>
		    <artifactId>hazelcast-spring</artifactId>
  			<version>3.2</version>
		</dependency>

		<!-- rabbitMQ -->
		<dependency>
			<groupId>org.springframework.amqp</groupId>
			<artifactId>spring-rabbit</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.amqp</groupId>
			<artifactId>spring-amqp</artifactId>
		</dependency>

		<dependency>
			<groupId>com.rabbitmq</groupId>
			<artifactId>amqp-client</artifactId>
			<version>${rabbitmq.version}</version>
		</dependency>
		
		<dependency>
			<groupId>com.mediabank.vendorportal</groupId>
			<artifactId>vendor-portal-service-broker</artifactId>
		</dependency>

		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mail</artifactId>
			<version>1.4</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.jasig.cas</groupId>
			<artifactId>cas-client-core</artifactId>
			<version>3.1.10</version>
		</dependency>
		<dependency>
			<groupId>com.thoughtworks.xstream</groupId>
			<artifactId>xstream</artifactId>
			<version>1.4.4</version>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-reflect</artifactId>
			<version>${org.powermock.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-api-easymock</artifactId>
			<version>${org.powermock.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-junit4</artifactId>
			<version>${org.powermock.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- Security2 -->
		<dependency>
			<groupId>com.mediaocean.prisma</groupId>
			<artifactId>security</artifactId>
			<exclusions>
				<exclusion>
					<artifactId>javassist</artifactId>
					<groupId>javassist</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
		</dependency>

		<!-- Quartz -->
		<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz</artifactId>
			<version>2.2.0</version>
			<exclusions>
				<exclusion>
					<artifactId>jta</artifactId>
					<groupId>javax.transaction</groupId>
				</exclusion>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-log4j12</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-jdk14</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.mediaocean.os.document.broker</groupId>
			<artifactId>os-document-broker</artifactId>
			<version>${net.dds.ideskos.services.broker.os-service-broker-document}</version>
		</dependency>

		<dependency>
			<groupId>com.mediaocean.security</groupId>
			<artifactId>security-broker</artifactId>
			<exclusions>
				<exclusion>
					<artifactId>ehcache-core</artifactId>
					<groupId>net.sf.ehcache</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>net.sf.ehcache</groupId>
			<artifactId>ehcache-jcache</artifactId>
		</dependency>

		<dependency>
			<groupId>net.sf.opencsv</groupId>
			<artifactId>opencsv</artifactId>
			<version>2.3</version>
		</dependency>
		
		<dependency>
			<groupId>net.sf.ehcache</groupId>
			<artifactId>ehcache-core</artifactId>
			<version>2.6.0</version>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.graylog2</groupId>
			<artifactId>gelfj</artifactId>
			<!-- Hard coding version to test, will move to the parent later -->
			<version>1.1.7</version>
			<scope>compile</scope>
		</dependency>
		
		<dependency>
			<groupId>com.mediaocean.monitoring</groupId>
			<artifactId>mo-newrelic</artifactId>
			<version>2015.3.7</version>
			<exclusions>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-beans</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-context</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
		</dependency>
		
		<!-- Forcing spring version of all transitively imported dependencies -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-expression</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-jpa</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-tx</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-orm</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-beans</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aspects</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.retry</groupId>
			<artifactId>spring-retry</artifactId>
			<version>${spring.retry.version}</version>
		</dependency>
	</dependencies>

	<build>
		<finalName>prebuy-server-services</finalName>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>aspectj-maven-plugin</artifactId>
				<version>1.4</version>
				<!-- Adding explicit dependency to 1.7.2 aspectjtools as 1.4 version 
					of the plugin expects 1.6.11 -->
				<dependencies>
					<dependency>
						<groupId>org.aspectj</groupId>
						<artifactId>aspectjtools</artifactId>
						<version>${org.aspectj.version}</version>
					</dependency>
				</dependencies>
				<configuration>
					<showWeaveInfo>true</showWeaveInfo>
					<source>1.7</source>
					<target>1.7</target>
					<Xlint>ignore</Xlint>
					<complianceLevel>1.7</complianceLevel>
					<encoding>UTF-8</encoding>
					<verbose>true</verbose>
					<weaveDependencies>
						<weaveDependency>
							<groupId>com.mediaocean.prebuy</groupId>
							<artifactId>prebuy-service</artifactId>
						</weaveDependency>
						<weaveDependency>
							<groupId>com.mediaocean.prisma</groupId>
							<artifactId>security</artifactId>
						</weaveDependency>
					</weaveDependencies>
					<aspectLibraries>
						<aspectLibrary>
							<groupId>org.springframework</groupId>
							<artifactId>spring-aspects</artifactId>
						</aspectLibrary>
					</aspectLibraries>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
							<goal>test-compile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>
											apt-maven-plugin
										</artifactId>
										<versionRange>
											[1.0-alpha-5,)
										</versionRange>
										<goals>
											<goal>process</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	
</project>