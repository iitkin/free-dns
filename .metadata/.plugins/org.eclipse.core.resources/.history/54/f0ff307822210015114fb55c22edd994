<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	id="WebApp_ID" version="2.5">

	<display-name>Prebuy Services</display-name>

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<!-- os-prebuy-security.xml needs to be loaded by ContextLoaderListener -->
		<param-value>
			classpath:spring/config/os-prebuy-servlet.xml
			<!-- classpath:spring/config/os-prebuy-security.xml -->
		</param-value>
	</context-param>

	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>

	<listener>
	  <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
	</listener>
	
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>classpath:log4j.properties</param-value>
	</context-param>

	<servlet>
		<servlet-name>os-prebuy-services</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>os-prebuy-services</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>

	<filter>
		<filter-name>loggingFilter</filter-name>
		<filter-class>com.mediaocean.common.web.RequestLoggingFilter</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>loggingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- OSPB 567 - Need the distributable element for session sharing for CAS -->
	<distributable/>

    <!-- Configuration for API calls to resolve user id in header -->
	<filter>
		<filter-name>userIdResolver</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>userIdResolver</filter-name>
		<url-pattern>/external/*</url-pattern>
	</filter-mapping>
	
	<filter-mapping>
		<filter-name>userIdResolver</filter-name>
		<url-pattern>/api/*</url-pattern>
	</filter-mapping>
	
	<!-- Configuration for spring security -->
	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- Health Check servlet -->
	<servlet>
		<servlet-name>health-check</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>health-check</servlet-name>
		<url-pattern>/healthcheck/*</url-pattern>
	</servlet-mapping>
	
	<resource-ref>
		<res-ref-name>jdbc/prebuyDB</res-ref-name>
		<res-type>javax.sql.DataSource</res-type>
		<res-auth>Container</res-auth>
	</resource-ref>
	
<!-- 	<filter> -->
<!-- 		<filter-name>loggingHealthcheckFilter</filter-name> -->
<!-- 		<filter-class>com.mediaocean.common.web.RequestLoggingFilter</filter-class> -->
<!-- 	</filter> -->

<!-- 	<filter-mapping> -->
<!-- 		<filter-name>loggingHealthcheckFilter</filter-name> -->
<!-- 		<url-pattern>/healthcheck/*</url-pattern> -->
<!-- 	</filter-mapping> -->


	<!-- <welcome-file-list> -->
	<!-- <welcome-file> -->
	<!-- /login.jsp -->
	<!-- </welcome-file> -->
	<!-- </welcome-file-list> -->
</web-app>